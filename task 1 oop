-- part 2
using System;

#region 1
enum WeekDays
{
    Saturday,
    Sunday,
    Monday,
    Tuesday,
    Wednesday,
    Thursday,
    Friday
}
#endregion

#region 2
enum Season
{
    Winter,
    Spring,
    Summer,
    Autumn
}
#endregion

#region 3
[Flags]
enum Permission
{
    Read = 1,
    Write = 2,
    Delete = 4,
    Execute = 8
}
#endregion

#region 4
enum Colors
{
    Red,
    Green,
    Blue
}
#endregion

class Program
{
    static void Main()
    {
        #region 1
        Console.WriteLine("Days of the week:");
        WeekDays[] days = (WeekDays[])Enum.GetValues(typeof(WeekDays));
        for (int i = 0; i < days.Length; i++)
        {
            Console.WriteLine(days[i]);
        }
        Console.WriteLine();
        #endregion

        #region 2
        Console.Write("Enter a season name : ");
        string inputSeason = Console.ReadLine();

        if (Enum.TryParse(inputSeason, true, out Season season))
        {
            switch (season)
            {
                case Season.Spring:
                    Console.WriteLine("Spring: March to May");
                    break;
                case Season.Summer:
                    Console.WriteLine("Summer: June to August");
                    break;
                case Season.Autumn:
                    Console.WriteLine("Autumn: September to November");
                    break;
                case Season.Winter:
                    Console.WriteLine("Winter: December to February");
                    break;
            }
        }
        else
        {
            Console.WriteLine("Invalid");
        }
        Console.WriteLine();
        #endregion

        #region 3
        Permission userPermission = Permission.Read | Permission.Write;

        Console.WriteLine($"Initial Permissions: {userPermission}");

        // Add Execute permission
        userPermission |= Permission.Execute;
        Console.WriteLine($"After Adding Execute: {userPermission}");

        // Remove Write permission
        userPermission &= Permission.Write;
        Console.WriteLine($"After Removing Write: {userPermission}");

        // Check if Delete exists
        if ((userPermission & Permission.Delete) == Permission.Delete)
            Console.WriteLine("Permission have Delete");
        else
            Console.WriteLine("Permission doest Delete");

        Console.WriteLine();
        #endregion

        #region 4
        Console.Write("Enter a color name: ");
        string inputColor = Console.ReadLine();

        if (Enum.TryParse(inputColor, true, out Colors color))
        {
            Console.WriteLine($"{color} is a primary color.");
        }
        else
        {
            Console.WriteLine("Invalid color entered");
        }
        #endregion
}
}
  
}
